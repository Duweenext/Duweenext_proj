package entities

import (
	"time"

	"gorm.io/gorm"
	// "gorm.io/gorm" // Only needed if gorm.DeletedAt is used in DTOs
)

// BoardRelationship entity is fine as is:
type BoardRelationship struct {
	CreatedAt         time.Time
	UpdatedAt         time.Time
	DeletedAt         gorm.DeletedAt `gorm:"index"`
	ConnectionID      uint           `gorm:"primaryKey;autoIncrement"`
	BoardID           *string        `gorm:"not null"`
	UserID            *uint          `gorm:"not null"`
	BoardRegisterDate time.Time
}

// DTO for creating a new board relationship
// ConnectionID should NOT be here as it's auto-generated by the database.
type InsertBoardRelationshipDto struct {
	BoardID           string    `json:"board_id" validate:"required"` // Assuming you add validation
	UserID            *uint     `json:"user_id" validate:"required"`  // Assuming you add validation
	BoardRegisterDate time.Time `json:"board_register_date"`        // This can be optional
}

// DTO for responding with board relationship details
type BoardRelationshipResponseDto struct {
	ConnectionID      uint      `json:"connection_id"`
	BoardID           string    `json:"board_id"`
	// SensorID          uint      `json:"sensor_id"` // Note: SensorID is not in the BoardRelationship entity.
	                                               // If needed, it must come from a join or another source.
	                                               // For a direct mapping of BoardRelationship, this would be omitted or sourced differently.
	UserID            uint      `json:"user_id"` // Added UserID for completeness based on BoardRelationship
	BoardRegisterDate time.Time `json:"board_register_date"`
    CreatedAt         time.Time `json:"created_at"` // Typically good to include audit fields
    UpdatedAt         time.Time `json:"updated_at"` // Typically good to include audit fields
}